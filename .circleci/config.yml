version: 2
jobs:
  sanity-check:
    working_directory: /go/src/github.com/networkservicemesh/examples
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run:
          command: |
            sudo apt-get install yamllint python3-pkg-resources
            ./.circleci/install-shellcheck.sh
      - run: yamllint -c .yamllint.yml $(git ls-files '*.yaml' '*.yml')
      - run: go version
      - run: make vet check
      - run: go install k8s.io/code-generator/cmd/deepcopy-gen
      - run: go install github.com/golang/protobuf/protoc-gen-go
      - run: go get golang.org/x/tools/cmd/stringer
      - run: ./scripts/install-protoc.sh
      # - run: go generate ./...
      - run: go build ./...
      # - run: mkdir -p ~/junit/
      # - run:
      #     command: |
      #       export COMMIT="${CIRCLE_SHA1:8:8}"
      #       export CONTAINER_TAG="${COMMIT}"
      #       export CONTAINER_FORCE_PULL="true"
      #       gotestsum --junitfile ~/junit/unit-tests.xml -- -short `go list ./... | grep -v networkservicemesh/test/`
      # - store_test_results:
      #     path: ~/junit
      # - store_artifacts:
      #     path: ~/junit
    environment:
      GO111MODULE: 'on'
  build:
    working_directory: /go/src/github.com/networkservicemesh/examples
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            export COMMIT="${CIRCLE_SHA1:8:8}"
            export TAG="${COMMIT}"
            make docker-build
workflows:
  version: 2
  build-and-test:
    jobs:
      - sanity-check
      - build:
          requires:
            - sanity-check
